/*
'===============================================================================
'  Generated From - CSharp_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace cfdiPeru
{
	public class vwCfdiPagosSimultaneos : SqlClientEntity
	{
		public vwCfdiPagosSimultaneos()
		{
			this.QuerySource = "vwCfdiPagosSimultaneos";
			this.MappingName = "vwCfdiPagosSimultaneos";
		}	
	
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			return base.Query.Load();
		}
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
	
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter Apfrdcty
			{
				get
				{
					return new SqlParameter("@Apfrdcty", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter Apfrdcnm
			{
				get
				{
					return new SqlParameter("@Apfrdcnm", SqlDbType.Char, 21);
				}
			}
			
			public static SqlParameter APTODCTY
			{
				get
				{
					return new SqlParameter("@APTODCTY", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter APTODCNM
			{
				get
				{
					return new SqlParameter("@APTODCNM", SqlDbType.Char, 21);
				}
			}
			
		}
		#endregion	
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string Apfrdcty = "apfrdcty";
            public const string Apfrdcnm = "apfrdcnm";
            public const string APTODCTY = "APTODCTY";
            public const string APTODCNM = "APTODCNM";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Apfrdcty] = vwCfdiPagosSimultaneos.PropertyNames.Apfrdcty;
					ht[Apfrdcnm] = vwCfdiPagosSimultaneos.PropertyNames.Apfrdcnm;
					ht[APTODCTY] = vwCfdiPagosSimultaneos.PropertyNames.APTODCTY;
					ht[APTODCNM] = vwCfdiPagosSimultaneos.PropertyNames.APTODCNM;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string Apfrdcty = "Apfrdcty";
            public const string Apfrdcnm = "Apfrdcnm";
            public const string APTODCTY = "APTODCTY";
            public const string APTODCNM = "APTODCNM";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Apfrdcty] = vwCfdiPagosSimultaneos.ColumnNames.Apfrdcty;
					ht[Apfrdcnm] = vwCfdiPagosSimultaneos.ColumnNames.Apfrdcnm;
					ht[APTODCTY] = vwCfdiPagosSimultaneos.ColumnNames.APTODCTY;
					ht[APTODCNM] = vwCfdiPagosSimultaneos.ColumnNames.APTODCNM;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string Apfrdcty = "s_Apfrdcty";
            public const string Apfrdcnm = "s_Apfrdcnm";
            public const string APTODCTY = "s_APTODCTY";
            public const string APTODCNM = "s_APTODCNM";

		}
		#endregion	
		
		#region Properties
			public virtual short Apfrdcty
	    {
			get
	        {
				return base.Getshort(ColumnNames.Apfrdcty);
			}
			set
	        {
				base.Setshort(ColumnNames.Apfrdcty, value);
			}
		}

		public virtual string Apfrdcnm
	    {
			get
	        {
				return base.Getstring(ColumnNames.Apfrdcnm);
			}
			set
	        {
				base.Setstring(ColumnNames.Apfrdcnm, value);
			}
		}

		public virtual short APTODCTY
	    {
			get
	        {
				return base.Getshort(ColumnNames.APTODCTY);
			}
			set
	        {
				base.Setshort(ColumnNames.APTODCTY, value);
			}
		}

		public virtual string APTODCNM
	    {
			get
	        {
				return base.Getstring(ColumnNames.APTODCNM);
			}
			set
	        {
				base.Setstring(ColumnNames.APTODCNM, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_Apfrdcty
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Apfrdcty) ? string.Empty : base.GetshortAsString(ColumnNames.Apfrdcty);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Apfrdcty);
				else
					this.Apfrdcty = base.SetshortAsString(ColumnNames.Apfrdcty, value);
			}
		}

		public virtual string s_Apfrdcnm
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Apfrdcnm) ? string.Empty : base.GetstringAsString(ColumnNames.Apfrdcnm);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Apfrdcnm);
				else
					this.Apfrdcnm = base.SetstringAsString(ColumnNames.Apfrdcnm, value);
			}
		}

		public virtual string s_APTODCTY
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.APTODCTY) ? string.Empty : base.GetshortAsString(ColumnNames.APTODCTY);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.APTODCTY);
				else
					this.APTODCTY = base.SetshortAsString(ColumnNames.APTODCTY, value);
			}
		}

		public virtual string s_APTODCNM
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.APTODCNM) ? string.Empty : base.GetstringAsString(ColumnNames.APTODCNM);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.APTODCNM);
				else
					this.APTODCNM = base.SetstringAsString(ColumnNames.APTODCNM, value);
			}
		}


		#endregion			
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Apfrdcty
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Apfrdcty, Parameters.Apfrdcty);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Apfrdcnm
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Apfrdcnm, Parameters.Apfrdcnm);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter APTODCTY
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.APTODCTY, Parameters.APTODCTY);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter APTODCNM
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.APTODCNM, Parameters.APTODCNM);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Apfrdcty
		    {
				get
		        {
					if(_Apfrdcty_W == null)
	        	    {
						_Apfrdcty_W = TearOff.Apfrdcty;
					}
					return _Apfrdcty_W;
				}
			}

			public WhereParameter Apfrdcnm
		    {
				get
		        {
					if(_Apfrdcnm_W == null)
	        	    {
						_Apfrdcnm_W = TearOff.Apfrdcnm;
					}
					return _Apfrdcnm_W;
				}
			}

			public WhereParameter APTODCTY
		    {
				get
		        {
					if(_APTODCTY_W == null)
	        	    {
						_APTODCTY_W = TearOff.APTODCTY;
					}
					return _APTODCTY_W;
				}
			}

			public WhereParameter APTODCNM
		    {
				get
		        {
					if(_APTODCNM_W == null)
	        	    {
						_APTODCNM_W = TearOff.APTODCNM;
					}
					return _APTODCNM_W;
				}
			}

			private WhereParameter _Apfrdcty_W = null;
			private WhereParameter _Apfrdcnm_W = null;
			private WhereParameter _APTODCTY_W = null;
			private WhereParameter _APTODCNM_W = null;

			public void WhereClauseReset()
			{
				_Apfrdcty_W = null;
				_Apfrdcnm_W = null;
				_APTODCTY_W = null;
				_APTODCNM_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Apfrdcty
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Apfrdcty, Parameters.Apfrdcty);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Apfrdcnm
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Apfrdcnm, Parameters.Apfrdcnm);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter APTODCTY
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.APTODCTY, Parameters.APTODCTY);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter APTODCNM
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.APTODCNM, Parameters.APTODCNM);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Apfrdcty
		    {
				get
		        {
					if(_Apfrdcty_W == null)
	        	    {
						_Apfrdcty_W = TearOff.Apfrdcty;
					}
					return _Apfrdcty_W;
				}
			}

			public AggregateParameter Apfrdcnm
		    {
				get
		        {
					if(_Apfrdcnm_W == null)
	        	    {
						_Apfrdcnm_W = TearOff.Apfrdcnm;
					}
					return _Apfrdcnm_W;
				}
			}

			public AggregateParameter APTODCTY
		    {
				get
		        {
					if(_APTODCTY_W == null)
	        	    {
						_APTODCTY_W = TearOff.APTODCTY;
					}
					return _APTODCTY_W;
				}
			}

			public AggregateParameter APTODCNM
		    {
				get
		        {
					if(_APTODCNM_W == null)
	        	    {
						_APTODCNM_W = TearOff.APTODCNM;
					}
					return _APTODCNM_W;
				}
			}

			private AggregateParameter _Apfrdcty_W = null;
			private AggregateParameter _Apfrdcnm_W = null;
			private AggregateParameter _APTODCTY_W = null;
			private AggregateParameter _APTODCNM_W = null;

			public void AggregateClauseReset()
			{
				_Apfrdcty_W = null;
				_Apfrdcnm_W = null;
				_APTODCTY_W = null;
				_APTODCNM_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
			return null;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
			return null;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
			return null;
		}
	}
}
