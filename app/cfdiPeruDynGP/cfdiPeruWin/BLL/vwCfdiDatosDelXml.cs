/*
'===============================================================================
'  Generated From - CSharp_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace cfd.FacturaElectronica
{
	public class vwCfdiDatosDelXml : SqlClientEntity
	{
		public vwCfdiDatosDelXml()
		{
			this.QuerySource = "vwCfdiDatosDelXml";
			this.MappingName = "vwCfdiDatosDelXml";
		}	
	
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			return base.Query.Load();
		}
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
	
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter Soptype
			{
				get
				{
					return new SqlParameter("@Soptype", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter Sopnumbe
			{
				get
				{
					return new SqlParameter("@Sopnumbe", SqlDbType.VarChar, 21);
				}
			}
			
			public static SqlParameter Secuencia
			{
				get
				{
					return new SqlParameter("@Secuencia", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter Estado
			{
				get
				{
					return new SqlParameter("@Estado", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter Mensaje
			{
				get
				{
					return new SqlParameter("@Mensaje", SqlDbType.VarChar, 255);
				}
			}
			
			public static SqlParameter EstadoActual
			{
				get
				{
					return new SqlParameter("@EstadoActual", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter MensajeEA
			{
				get
				{
					return new SqlParameter("@MensajeEA", SqlDbType.VarChar, 255);
				}
			}
			
			public static SqlParameter SelloCFD
			{
				get
				{
					return new SqlParameter("@SelloCFD", SqlDbType.VarChar, 8000);
				}
			}
			
			public static SqlParameter FechaTimbrado
			{
				get
				{
					return new SqlParameter("@FechaTimbrado", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter UUID
			{
				get
				{
					return new SqlParameter("@UUID", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter NoCertificadoSAT
			{
				get
				{
					return new SqlParameter("@NoCertificadoSAT", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter Version
			{
				get
				{
					return new SqlParameter("@Version", SqlDbType.VarChar, 5);
				}
			}
			
			public static SqlParameter SelloSAT
			{
				get
				{
					return new SqlParameter("@SelloSAT", SqlDbType.VarChar, 8000);
				}
			}
			
			public static SqlParameter FormaPago
			{
				get
				{
					return new SqlParameter("@FormaPago", SqlDbType.VarChar, 50);
				}
			}
			
			public static SqlParameter Sello
			{
				get
				{
					return new SqlParameter("@Sello", SqlDbType.VarChar, 8000);
				}
			}
			
			public static SqlParameter NoCertificadoCSD
			{
				get
				{
					return new SqlParameter("@NoCertificadoCSD", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter MetodoPago
			{
				get
				{
					return new SqlParameter("@MetodoPago", SqlDbType.VarChar, 21);
				}
			}
			
			public static SqlParameter UsoCfdi
			{
				get
				{
					return new SqlParameter("@UsoCfdi", SqlDbType.VarChar, 4);
				}
			}
			
			public static SqlParameter RfcPAC
			{
				get
				{
					return new SqlParameter("@RfcPAC", SqlDbType.VarChar, 20);
				}
			}
			
			public static SqlParameter Leyenda
			{
				get
				{
					return new SqlParameter("@Leyenda", SqlDbType.VarChar, 150);
				}
			}
			
			public static SqlParameter TipoRelacion
			{
				get
				{
					return new SqlParameter("@TipoRelacion", SqlDbType.VarChar, 4);
				}
			}
			
			public static SqlParameter UUIDrelacionado
			{
				get
				{
					return new SqlParameter("@UUIDrelacionado", SqlDbType.VarChar, 60);
				}
			}
			
			public static SqlParameter CadenaOriginalSAT
			{
				get
				{
					return new SqlParameter("@CadenaOriginalSAT", SqlDbType.VarChar, 8000);
				}
			}
			
		}
		#endregion	
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string Soptype = "soptype";
            public const string Sopnumbe = "sopnumbe";
            public const string Secuencia = "secuencia";
            public const string Estado = "estado";
            public const string Mensaje = "mensaje";
            public const string EstadoActual = "estadoActual";
            public const string MensajeEA = "mensajeEA";
            public const string SelloCFD = "SelloCFD";
            public const string FechaTimbrado = "FechaTimbrado";
            public const string UUID = "UUID";
            public const string NoCertificadoSAT = "noCertificadoSAT";
            public const string Version = "version";
            public const string SelloSAT = "selloSAT";
            public const string FormaPago = "FormaPago";
            public const string Sello = "sello";
            public const string NoCertificadoCSD = "noCertificadoCSD";
            public const string MetodoPago = "MetodoPago";
            public const string UsoCfdi = "usoCfdi";
            public const string RfcPAC = "RfcPAC";
            public const string Leyenda = "Leyenda";
            public const string TipoRelacion = "TipoRelacion";
            public const string UUIDrelacionado = "UUIDrelacionado";
            public const string CadenaOriginalSAT = "cadenaOriginalSAT";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Soptype] = vwCfdiDatosDelXml.PropertyNames.Soptype;
					ht[Sopnumbe] = vwCfdiDatosDelXml.PropertyNames.Sopnumbe;
					ht[Secuencia] = vwCfdiDatosDelXml.PropertyNames.Secuencia;
					ht[Estado] = vwCfdiDatosDelXml.PropertyNames.Estado;
					ht[Mensaje] = vwCfdiDatosDelXml.PropertyNames.Mensaje;
					ht[EstadoActual] = vwCfdiDatosDelXml.PropertyNames.EstadoActual;
					ht[MensajeEA] = vwCfdiDatosDelXml.PropertyNames.MensajeEA;
					ht[SelloCFD] = vwCfdiDatosDelXml.PropertyNames.SelloCFD;
					ht[FechaTimbrado] = vwCfdiDatosDelXml.PropertyNames.FechaTimbrado;
					ht[UUID] = vwCfdiDatosDelXml.PropertyNames.UUID;
					ht[NoCertificadoSAT] = vwCfdiDatosDelXml.PropertyNames.NoCertificadoSAT;
					ht[Version] = vwCfdiDatosDelXml.PropertyNames.Version;
					ht[SelloSAT] = vwCfdiDatosDelXml.PropertyNames.SelloSAT;
					ht[FormaPago] = vwCfdiDatosDelXml.PropertyNames.FormaPago;
					ht[Sello] = vwCfdiDatosDelXml.PropertyNames.Sello;
					ht[NoCertificadoCSD] = vwCfdiDatosDelXml.PropertyNames.NoCertificadoCSD;
					ht[MetodoPago] = vwCfdiDatosDelXml.PropertyNames.MetodoPago;
					ht[UsoCfdi] = vwCfdiDatosDelXml.PropertyNames.UsoCfdi;
					ht[RfcPAC] = vwCfdiDatosDelXml.PropertyNames.RfcPAC;
					ht[Leyenda] = vwCfdiDatosDelXml.PropertyNames.Leyenda;
					ht[TipoRelacion] = vwCfdiDatosDelXml.PropertyNames.TipoRelacion;
					ht[UUIDrelacionado] = vwCfdiDatosDelXml.PropertyNames.UUIDrelacionado;
					ht[CadenaOriginalSAT] = vwCfdiDatosDelXml.PropertyNames.CadenaOriginalSAT;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string Soptype = "Soptype";
            public const string Sopnumbe = "Sopnumbe";
            public const string Secuencia = "Secuencia";
            public const string Estado = "Estado";
            public const string Mensaje = "Mensaje";
            public const string EstadoActual = "EstadoActual";
            public const string MensajeEA = "MensajeEA";
            public const string SelloCFD = "SelloCFD";
            public const string FechaTimbrado = "FechaTimbrado";
            public const string UUID = "UUID";
            public const string NoCertificadoSAT = "NoCertificadoSAT";
            public const string Version = "Version";
            public const string SelloSAT = "SelloSAT";
            public const string FormaPago = "FormaPago";
            public const string Sello = "Sello";
            public const string NoCertificadoCSD = "NoCertificadoCSD";
            public const string MetodoPago = "MetodoPago";
            public const string UsoCfdi = "UsoCfdi";
            public const string RfcPAC = "RfcPAC";
            public const string Leyenda = "Leyenda";
            public const string TipoRelacion = "TipoRelacion";
            public const string UUIDrelacionado = "UUIDrelacionado";
            public const string CadenaOriginalSAT = "CadenaOriginalSAT";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Soptype] = vwCfdiDatosDelXml.ColumnNames.Soptype;
					ht[Sopnumbe] = vwCfdiDatosDelXml.ColumnNames.Sopnumbe;
					ht[Secuencia] = vwCfdiDatosDelXml.ColumnNames.Secuencia;
					ht[Estado] = vwCfdiDatosDelXml.ColumnNames.Estado;
					ht[Mensaje] = vwCfdiDatosDelXml.ColumnNames.Mensaje;
					ht[EstadoActual] = vwCfdiDatosDelXml.ColumnNames.EstadoActual;
					ht[MensajeEA] = vwCfdiDatosDelXml.ColumnNames.MensajeEA;
					ht[SelloCFD] = vwCfdiDatosDelXml.ColumnNames.SelloCFD;
					ht[FechaTimbrado] = vwCfdiDatosDelXml.ColumnNames.FechaTimbrado;
					ht[UUID] = vwCfdiDatosDelXml.ColumnNames.UUID;
					ht[NoCertificadoSAT] = vwCfdiDatosDelXml.ColumnNames.NoCertificadoSAT;
					ht[Version] = vwCfdiDatosDelXml.ColumnNames.Version;
					ht[SelloSAT] = vwCfdiDatosDelXml.ColumnNames.SelloSAT;
					ht[FormaPago] = vwCfdiDatosDelXml.ColumnNames.FormaPago;
					ht[Sello] = vwCfdiDatosDelXml.ColumnNames.Sello;
					ht[NoCertificadoCSD] = vwCfdiDatosDelXml.ColumnNames.NoCertificadoCSD;
					ht[MetodoPago] = vwCfdiDatosDelXml.ColumnNames.MetodoPago;
					ht[UsoCfdi] = vwCfdiDatosDelXml.ColumnNames.UsoCfdi;
					ht[RfcPAC] = vwCfdiDatosDelXml.ColumnNames.RfcPAC;
					ht[Leyenda] = vwCfdiDatosDelXml.ColumnNames.Leyenda;
					ht[TipoRelacion] = vwCfdiDatosDelXml.ColumnNames.TipoRelacion;
					ht[UUIDrelacionado] = vwCfdiDatosDelXml.ColumnNames.UUIDrelacionado;
					ht[CadenaOriginalSAT] = vwCfdiDatosDelXml.ColumnNames.CadenaOriginalSAT;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string Soptype = "s_Soptype";
            public const string Sopnumbe = "s_Sopnumbe";
            public const string Secuencia = "s_Secuencia";
            public const string Estado = "s_Estado";
            public const string Mensaje = "s_Mensaje";
            public const string EstadoActual = "s_EstadoActual";
            public const string MensajeEA = "s_MensajeEA";
            public const string SelloCFD = "s_SelloCFD";
            public const string FechaTimbrado = "s_FechaTimbrado";
            public const string UUID = "s_UUID";
            public const string NoCertificadoSAT = "s_NoCertificadoSAT";
            public const string Version = "s_Version";
            public const string SelloSAT = "s_SelloSAT";
            public const string FormaPago = "s_FormaPago";
            public const string Sello = "s_Sello";
            public const string NoCertificadoCSD = "s_NoCertificadoCSD";
            public const string MetodoPago = "s_MetodoPago";
            public const string UsoCfdi = "s_UsoCfdi";
            public const string RfcPAC = "s_RfcPAC";
            public const string Leyenda = "s_Leyenda";
            public const string TipoRelacion = "s_TipoRelacion";
            public const string UUIDrelacionado = "s_UUIDrelacionado";
            public const string CadenaOriginalSAT = "s_CadenaOriginalSAT";

		}
		#endregion	
		
		#region Properties
			public virtual short Soptype
	    {
			get
	        {
				return base.Getshort(ColumnNames.Soptype);
			}
			set
	        {
				base.Setshort(ColumnNames.Soptype, value);
			}
		}

		public virtual string Sopnumbe
	    {
			get
	        {
				return base.Getstring(ColumnNames.Sopnumbe);
			}
			set
	        {
				base.Setstring(ColumnNames.Sopnumbe, value);
			}
		}

		public virtual int Secuencia
	    {
			get
	        {
				return base.Getint(ColumnNames.Secuencia);
			}
			set
	        {
				base.Setint(ColumnNames.Secuencia, value);
			}
		}

		public virtual string Estado
	    {
			get
	        {
				return base.Getstring(ColumnNames.Estado);
			}
			set
	        {
				base.Setstring(ColumnNames.Estado, value);
			}
		}

		public virtual string Mensaje
	    {
			get
	        {
				return base.Getstring(ColumnNames.Mensaje);
			}
			set
	        {
				base.Setstring(ColumnNames.Mensaje, value);
			}
		}

		public virtual string EstadoActual
	    {
			get
	        {
				return base.Getstring(ColumnNames.EstadoActual);
			}
			set
	        {
				base.Setstring(ColumnNames.EstadoActual, value);
			}
		}

		public virtual string MensajeEA
	    {
			get
	        {
				return base.Getstring(ColumnNames.MensajeEA);
			}
			set
	        {
				base.Setstring(ColumnNames.MensajeEA, value);
			}
		}

		public virtual string SelloCFD
	    {
			get
	        {
				return base.Getstring(ColumnNames.SelloCFD);
			}
			set
	        {
				base.Setstring(ColumnNames.SelloCFD, value);
			}
		}

		public virtual string FechaTimbrado
	    {
			get
	        {
				return base.Getstring(ColumnNames.FechaTimbrado);
			}
			set
	        {
				base.Setstring(ColumnNames.FechaTimbrado, value);
			}
		}

		public virtual string UUID
	    {
			get
	        {
				return base.Getstring(ColumnNames.UUID);
			}
			set
	        {
				base.Setstring(ColumnNames.UUID, value);
			}
		}

		public virtual string NoCertificadoSAT
	    {
			get
	        {
				return base.Getstring(ColumnNames.NoCertificadoSAT);
			}
			set
	        {
				base.Setstring(ColumnNames.NoCertificadoSAT, value);
			}
		}

		public virtual string Version
	    {
			get
	        {
				return base.Getstring(ColumnNames.Version);
			}
			set
	        {
				base.Setstring(ColumnNames.Version, value);
			}
		}

		public virtual string SelloSAT
	    {
			get
	        {
				return base.Getstring(ColumnNames.SelloSAT);
			}
			set
	        {
				base.Setstring(ColumnNames.SelloSAT, value);
			}
		}

		public virtual string FormaPago
	    {
			get
	        {
				return base.Getstring(ColumnNames.FormaPago);
			}
			set
	        {
				base.Setstring(ColumnNames.FormaPago, value);
			}
		}

		public virtual string Sello
	    {
			get
	        {
				return base.Getstring(ColumnNames.Sello);
			}
			set
	        {
				base.Setstring(ColumnNames.Sello, value);
			}
		}

		public virtual string NoCertificadoCSD
	    {
			get
	        {
				return base.Getstring(ColumnNames.NoCertificadoCSD);
			}
			set
	        {
				base.Setstring(ColumnNames.NoCertificadoCSD, value);
			}
		}

		public virtual string MetodoPago
	    {
			get
	        {
				return base.Getstring(ColumnNames.MetodoPago);
			}
			set
	        {
				base.Setstring(ColumnNames.MetodoPago, value);
			}
		}

		public virtual string UsoCfdi
	    {
			get
	        {
				return base.Getstring(ColumnNames.UsoCfdi);
			}
			set
	        {
				base.Setstring(ColumnNames.UsoCfdi, value);
			}
		}

		public virtual string RfcPAC
	    {
			get
	        {
				return base.Getstring(ColumnNames.RfcPAC);
			}
			set
	        {
				base.Setstring(ColumnNames.RfcPAC, value);
			}
		}

		public virtual string Leyenda
	    {
			get
	        {
				return base.Getstring(ColumnNames.Leyenda);
			}
			set
	        {
				base.Setstring(ColumnNames.Leyenda, value);
			}
		}

		public virtual string TipoRelacion
	    {
			get
	        {
				return base.Getstring(ColumnNames.TipoRelacion);
			}
			set
	        {
				base.Setstring(ColumnNames.TipoRelacion, value);
			}
		}

		public virtual string UUIDrelacionado
	    {
			get
	        {
				return base.Getstring(ColumnNames.UUIDrelacionado);
			}
			set
	        {
				base.Setstring(ColumnNames.UUIDrelacionado, value);
			}
		}

		public virtual string CadenaOriginalSAT
	    {
			get
	        {
				return base.Getstring(ColumnNames.CadenaOriginalSAT);
			}
			set
	        {
				base.Setstring(ColumnNames.CadenaOriginalSAT, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_Soptype
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Soptype) ? string.Empty : base.GetshortAsString(ColumnNames.Soptype);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Soptype);
				else
					this.Soptype = base.SetshortAsString(ColumnNames.Soptype, value);
			}
		}

		public virtual string s_Sopnumbe
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Sopnumbe) ? string.Empty : base.GetstringAsString(ColumnNames.Sopnumbe);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Sopnumbe);
				else
					this.Sopnumbe = base.SetstringAsString(ColumnNames.Sopnumbe, value);
			}
		}

		public virtual string s_Secuencia
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Secuencia) ? string.Empty : base.GetintAsString(ColumnNames.Secuencia);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Secuencia);
				else
					this.Secuencia = base.SetintAsString(ColumnNames.Secuencia, value);
			}
		}

		public virtual string s_Estado
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Estado) ? string.Empty : base.GetstringAsString(ColumnNames.Estado);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Estado);
				else
					this.Estado = base.SetstringAsString(ColumnNames.Estado, value);
			}
		}

		public virtual string s_Mensaje
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Mensaje) ? string.Empty : base.GetstringAsString(ColumnNames.Mensaje);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Mensaje);
				else
					this.Mensaje = base.SetstringAsString(ColumnNames.Mensaje, value);
			}
		}

		public virtual string s_EstadoActual
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.EstadoActual) ? string.Empty : base.GetstringAsString(ColumnNames.EstadoActual);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.EstadoActual);
				else
					this.EstadoActual = base.SetstringAsString(ColumnNames.EstadoActual, value);
			}
		}

		public virtual string s_MensajeEA
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.MensajeEA) ? string.Empty : base.GetstringAsString(ColumnNames.MensajeEA);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.MensajeEA);
				else
					this.MensajeEA = base.SetstringAsString(ColumnNames.MensajeEA, value);
			}
		}

		public virtual string s_SelloCFD
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.SelloCFD) ? string.Empty : base.GetstringAsString(ColumnNames.SelloCFD);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.SelloCFD);
				else
					this.SelloCFD = base.SetstringAsString(ColumnNames.SelloCFD, value);
			}
		}

		public virtual string s_FechaTimbrado
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.FechaTimbrado) ? string.Empty : base.GetstringAsString(ColumnNames.FechaTimbrado);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.FechaTimbrado);
				else
					this.FechaTimbrado = base.SetstringAsString(ColumnNames.FechaTimbrado, value);
			}
		}

		public virtual string s_UUID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.UUID) ? string.Empty : base.GetstringAsString(ColumnNames.UUID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.UUID);
				else
					this.UUID = base.SetstringAsString(ColumnNames.UUID, value);
			}
		}

		public virtual string s_NoCertificadoSAT
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.NoCertificadoSAT) ? string.Empty : base.GetstringAsString(ColumnNames.NoCertificadoSAT);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.NoCertificadoSAT);
				else
					this.NoCertificadoSAT = base.SetstringAsString(ColumnNames.NoCertificadoSAT, value);
			}
		}

		public virtual string s_Version
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Version) ? string.Empty : base.GetstringAsString(ColumnNames.Version);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Version);
				else
					this.Version = base.SetstringAsString(ColumnNames.Version, value);
			}
		}

		public virtual string s_SelloSAT
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.SelloSAT) ? string.Empty : base.GetstringAsString(ColumnNames.SelloSAT);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.SelloSAT);
				else
					this.SelloSAT = base.SetstringAsString(ColumnNames.SelloSAT, value);
			}
		}

		public virtual string s_FormaPago
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.FormaPago) ? string.Empty : base.GetstringAsString(ColumnNames.FormaPago);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.FormaPago);
				else
					this.FormaPago = base.SetstringAsString(ColumnNames.FormaPago, value);
			}
		}

		public virtual string s_Sello
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Sello) ? string.Empty : base.GetstringAsString(ColumnNames.Sello);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Sello);
				else
					this.Sello = base.SetstringAsString(ColumnNames.Sello, value);
			}
		}

		public virtual string s_NoCertificadoCSD
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.NoCertificadoCSD) ? string.Empty : base.GetstringAsString(ColumnNames.NoCertificadoCSD);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.NoCertificadoCSD);
				else
					this.NoCertificadoCSD = base.SetstringAsString(ColumnNames.NoCertificadoCSD, value);
			}
		}

		public virtual string s_MetodoPago
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.MetodoPago) ? string.Empty : base.GetstringAsString(ColumnNames.MetodoPago);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.MetodoPago);
				else
					this.MetodoPago = base.SetstringAsString(ColumnNames.MetodoPago, value);
			}
		}

		public virtual string s_UsoCfdi
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.UsoCfdi) ? string.Empty : base.GetstringAsString(ColumnNames.UsoCfdi);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.UsoCfdi);
				else
					this.UsoCfdi = base.SetstringAsString(ColumnNames.UsoCfdi, value);
			}
		}

		public virtual string s_RfcPAC
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.RfcPAC) ? string.Empty : base.GetstringAsString(ColumnNames.RfcPAC);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.RfcPAC);
				else
					this.RfcPAC = base.SetstringAsString(ColumnNames.RfcPAC, value);
			}
		}

		public virtual string s_Leyenda
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Leyenda) ? string.Empty : base.GetstringAsString(ColumnNames.Leyenda);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Leyenda);
				else
					this.Leyenda = base.SetstringAsString(ColumnNames.Leyenda, value);
			}
		}

		public virtual string s_TipoRelacion
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.TipoRelacion) ? string.Empty : base.GetstringAsString(ColumnNames.TipoRelacion);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.TipoRelacion);
				else
					this.TipoRelacion = base.SetstringAsString(ColumnNames.TipoRelacion, value);
			}
		}

		public virtual string s_UUIDrelacionado
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.UUIDrelacionado) ? string.Empty : base.GetstringAsString(ColumnNames.UUIDrelacionado);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.UUIDrelacionado);
				else
					this.UUIDrelacionado = base.SetstringAsString(ColumnNames.UUIDrelacionado, value);
			}
		}

		public virtual string s_CadenaOriginalSAT
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.CadenaOriginalSAT) ? string.Empty : base.GetstringAsString(ColumnNames.CadenaOriginalSAT);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.CadenaOriginalSAT);
				else
					this.CadenaOriginalSAT = base.SetstringAsString(ColumnNames.CadenaOriginalSAT, value);
			}
		}


		#endregion			
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Soptype
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Soptype, Parameters.Soptype);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Sopnumbe
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Sopnumbe, Parameters.Sopnumbe);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Secuencia
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Secuencia, Parameters.Secuencia);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Estado
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Estado, Parameters.Estado);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Mensaje
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Mensaje, Parameters.Mensaje);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter EstadoActual
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.EstadoActual, Parameters.EstadoActual);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter MensajeEA
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.MensajeEA, Parameters.MensajeEA);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter SelloCFD
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.SelloCFD, Parameters.SelloCFD);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter FechaTimbrado
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.FechaTimbrado, Parameters.FechaTimbrado);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter UUID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.UUID, Parameters.UUID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter NoCertificadoSAT
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.NoCertificadoSAT, Parameters.NoCertificadoSAT);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Version
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Version, Parameters.Version);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter SelloSAT
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.SelloSAT, Parameters.SelloSAT);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter FormaPago
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.FormaPago, Parameters.FormaPago);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Sello
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Sello, Parameters.Sello);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter NoCertificadoCSD
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.NoCertificadoCSD, Parameters.NoCertificadoCSD);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter MetodoPago
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.MetodoPago, Parameters.MetodoPago);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter UsoCfdi
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.UsoCfdi, Parameters.UsoCfdi);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter RfcPAC
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.RfcPAC, Parameters.RfcPAC);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Leyenda
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Leyenda, Parameters.Leyenda);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter TipoRelacion
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.TipoRelacion, Parameters.TipoRelacion);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter UUIDrelacionado
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.UUIDrelacionado, Parameters.UUIDrelacionado);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter CadenaOriginalSAT
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.CadenaOriginalSAT, Parameters.CadenaOriginalSAT);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Soptype
		    {
				get
		        {
					if(_Soptype_W == null)
	        	    {
						_Soptype_W = TearOff.Soptype;
					}
					return _Soptype_W;
				}
			}

			public WhereParameter Sopnumbe
		    {
				get
		        {
					if(_Sopnumbe_W == null)
	        	    {
						_Sopnumbe_W = TearOff.Sopnumbe;
					}
					return _Sopnumbe_W;
				}
			}

			public WhereParameter Secuencia
		    {
				get
		        {
					if(_Secuencia_W == null)
	        	    {
						_Secuencia_W = TearOff.Secuencia;
					}
					return _Secuencia_W;
				}
			}

			public WhereParameter Estado
		    {
				get
		        {
					if(_Estado_W == null)
	        	    {
						_Estado_W = TearOff.Estado;
					}
					return _Estado_W;
				}
			}

			public WhereParameter Mensaje
		    {
				get
		        {
					if(_Mensaje_W == null)
	        	    {
						_Mensaje_W = TearOff.Mensaje;
					}
					return _Mensaje_W;
				}
			}

			public WhereParameter EstadoActual
		    {
				get
		        {
					if(_EstadoActual_W == null)
	        	    {
						_EstadoActual_W = TearOff.EstadoActual;
					}
					return _EstadoActual_W;
				}
			}

			public WhereParameter MensajeEA
		    {
				get
		        {
					if(_MensajeEA_W == null)
	        	    {
						_MensajeEA_W = TearOff.MensajeEA;
					}
					return _MensajeEA_W;
				}
			}

			public WhereParameter SelloCFD
		    {
				get
		        {
					if(_SelloCFD_W == null)
	        	    {
						_SelloCFD_W = TearOff.SelloCFD;
					}
					return _SelloCFD_W;
				}
			}

			public WhereParameter FechaTimbrado
		    {
				get
		        {
					if(_FechaTimbrado_W == null)
	        	    {
						_FechaTimbrado_W = TearOff.FechaTimbrado;
					}
					return _FechaTimbrado_W;
				}
			}

			public WhereParameter UUID
		    {
				get
		        {
					if(_UUID_W == null)
	        	    {
						_UUID_W = TearOff.UUID;
					}
					return _UUID_W;
				}
			}

			public WhereParameter NoCertificadoSAT
		    {
				get
		        {
					if(_NoCertificadoSAT_W == null)
	        	    {
						_NoCertificadoSAT_W = TearOff.NoCertificadoSAT;
					}
					return _NoCertificadoSAT_W;
				}
			}

			public WhereParameter Version
		    {
				get
		        {
					if(_Version_W == null)
	        	    {
						_Version_W = TearOff.Version;
					}
					return _Version_W;
				}
			}

			public WhereParameter SelloSAT
		    {
				get
		        {
					if(_SelloSAT_W == null)
	        	    {
						_SelloSAT_W = TearOff.SelloSAT;
					}
					return _SelloSAT_W;
				}
			}

			public WhereParameter FormaPago
		    {
				get
		        {
					if(_FormaPago_W == null)
	        	    {
						_FormaPago_W = TearOff.FormaPago;
					}
					return _FormaPago_W;
				}
			}

			public WhereParameter Sello
		    {
				get
		        {
					if(_Sello_W == null)
	        	    {
						_Sello_W = TearOff.Sello;
					}
					return _Sello_W;
				}
			}

			public WhereParameter NoCertificadoCSD
		    {
				get
		        {
					if(_NoCertificadoCSD_W == null)
	        	    {
						_NoCertificadoCSD_W = TearOff.NoCertificadoCSD;
					}
					return _NoCertificadoCSD_W;
				}
			}

			public WhereParameter MetodoPago
		    {
				get
		        {
					if(_MetodoPago_W == null)
	        	    {
						_MetodoPago_W = TearOff.MetodoPago;
					}
					return _MetodoPago_W;
				}
			}

			public WhereParameter UsoCfdi
		    {
				get
		        {
					if(_UsoCfdi_W == null)
	        	    {
						_UsoCfdi_W = TearOff.UsoCfdi;
					}
					return _UsoCfdi_W;
				}
			}

			public WhereParameter RfcPAC
		    {
				get
		        {
					if(_RfcPAC_W == null)
	        	    {
						_RfcPAC_W = TearOff.RfcPAC;
					}
					return _RfcPAC_W;
				}
			}

			public WhereParameter Leyenda
		    {
				get
		        {
					if(_Leyenda_W == null)
	        	    {
						_Leyenda_W = TearOff.Leyenda;
					}
					return _Leyenda_W;
				}
			}

			public WhereParameter TipoRelacion
		    {
				get
		        {
					if(_TipoRelacion_W == null)
	        	    {
						_TipoRelacion_W = TearOff.TipoRelacion;
					}
					return _TipoRelacion_W;
				}
			}

			public WhereParameter UUIDrelacionado
		    {
				get
		        {
					if(_UUIDrelacionado_W == null)
	        	    {
						_UUIDrelacionado_W = TearOff.UUIDrelacionado;
					}
					return _UUIDrelacionado_W;
				}
			}

			public WhereParameter CadenaOriginalSAT
		    {
				get
		        {
					if(_CadenaOriginalSAT_W == null)
	        	    {
						_CadenaOriginalSAT_W = TearOff.CadenaOriginalSAT;
					}
					return _CadenaOriginalSAT_W;
				}
			}

			private WhereParameter _Soptype_W = null;
			private WhereParameter _Sopnumbe_W = null;
			private WhereParameter _Secuencia_W = null;
			private WhereParameter _Estado_W = null;
			private WhereParameter _Mensaje_W = null;
			private WhereParameter _EstadoActual_W = null;
			private WhereParameter _MensajeEA_W = null;
			private WhereParameter _SelloCFD_W = null;
			private WhereParameter _FechaTimbrado_W = null;
			private WhereParameter _UUID_W = null;
			private WhereParameter _NoCertificadoSAT_W = null;
			private WhereParameter _Version_W = null;
			private WhereParameter _SelloSAT_W = null;
			private WhereParameter _FormaPago_W = null;
			private WhereParameter _Sello_W = null;
			private WhereParameter _NoCertificadoCSD_W = null;
			private WhereParameter _MetodoPago_W = null;
			private WhereParameter _UsoCfdi_W = null;
			private WhereParameter _RfcPAC_W = null;
			private WhereParameter _Leyenda_W = null;
			private WhereParameter _TipoRelacion_W = null;
			private WhereParameter _UUIDrelacionado_W = null;
			private WhereParameter _CadenaOriginalSAT_W = null;

			public void WhereClauseReset()
			{
				_Soptype_W = null;
				_Sopnumbe_W = null;
				_Secuencia_W = null;
				_Estado_W = null;
				_Mensaje_W = null;
				_EstadoActual_W = null;
				_MensajeEA_W = null;
				_SelloCFD_W = null;
				_FechaTimbrado_W = null;
				_UUID_W = null;
				_NoCertificadoSAT_W = null;
				_Version_W = null;
				_SelloSAT_W = null;
				_FormaPago_W = null;
				_Sello_W = null;
				_NoCertificadoCSD_W = null;
				_MetodoPago_W = null;
				_UsoCfdi_W = null;
				_RfcPAC_W = null;
				_Leyenda_W = null;
				_TipoRelacion_W = null;
				_UUIDrelacionado_W = null;
				_CadenaOriginalSAT_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Soptype
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Soptype, Parameters.Soptype);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Sopnumbe
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Sopnumbe, Parameters.Sopnumbe);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Secuencia
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Secuencia, Parameters.Secuencia);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Estado
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Estado, Parameters.Estado);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Mensaje
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Mensaje, Parameters.Mensaje);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter EstadoActual
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.EstadoActual, Parameters.EstadoActual);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter MensajeEA
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.MensajeEA, Parameters.MensajeEA);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter SelloCFD
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.SelloCFD, Parameters.SelloCFD);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter FechaTimbrado
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.FechaTimbrado, Parameters.FechaTimbrado);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter UUID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.UUID, Parameters.UUID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter NoCertificadoSAT
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.NoCertificadoSAT, Parameters.NoCertificadoSAT);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Version
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Version, Parameters.Version);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter SelloSAT
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.SelloSAT, Parameters.SelloSAT);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter FormaPago
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.FormaPago, Parameters.FormaPago);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Sello
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Sello, Parameters.Sello);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter NoCertificadoCSD
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.NoCertificadoCSD, Parameters.NoCertificadoCSD);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter MetodoPago
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.MetodoPago, Parameters.MetodoPago);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter UsoCfdi
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.UsoCfdi, Parameters.UsoCfdi);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter RfcPAC
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.RfcPAC, Parameters.RfcPAC);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Leyenda
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Leyenda, Parameters.Leyenda);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter TipoRelacion
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.TipoRelacion, Parameters.TipoRelacion);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter UUIDrelacionado
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.UUIDrelacionado, Parameters.UUIDrelacionado);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter CadenaOriginalSAT
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.CadenaOriginalSAT, Parameters.CadenaOriginalSAT);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Soptype
		    {
				get
		        {
					if(_Soptype_W == null)
	        	    {
						_Soptype_W = TearOff.Soptype;
					}
					return _Soptype_W;
				}
			}

			public AggregateParameter Sopnumbe
		    {
				get
		        {
					if(_Sopnumbe_W == null)
	        	    {
						_Sopnumbe_W = TearOff.Sopnumbe;
					}
					return _Sopnumbe_W;
				}
			}

			public AggregateParameter Secuencia
		    {
				get
		        {
					if(_Secuencia_W == null)
	        	    {
						_Secuencia_W = TearOff.Secuencia;
					}
					return _Secuencia_W;
				}
			}

			public AggregateParameter Estado
		    {
				get
		        {
					if(_Estado_W == null)
	        	    {
						_Estado_W = TearOff.Estado;
					}
					return _Estado_W;
				}
			}

			public AggregateParameter Mensaje
		    {
				get
		        {
					if(_Mensaje_W == null)
	        	    {
						_Mensaje_W = TearOff.Mensaje;
					}
					return _Mensaje_W;
				}
			}

			public AggregateParameter EstadoActual
		    {
				get
		        {
					if(_EstadoActual_W == null)
	        	    {
						_EstadoActual_W = TearOff.EstadoActual;
					}
					return _EstadoActual_W;
				}
			}

			public AggregateParameter MensajeEA
		    {
				get
		        {
					if(_MensajeEA_W == null)
	        	    {
						_MensajeEA_W = TearOff.MensajeEA;
					}
					return _MensajeEA_W;
				}
			}

			public AggregateParameter SelloCFD
		    {
				get
		        {
					if(_SelloCFD_W == null)
	        	    {
						_SelloCFD_W = TearOff.SelloCFD;
					}
					return _SelloCFD_W;
				}
			}

			public AggregateParameter FechaTimbrado
		    {
				get
		        {
					if(_FechaTimbrado_W == null)
	        	    {
						_FechaTimbrado_W = TearOff.FechaTimbrado;
					}
					return _FechaTimbrado_W;
				}
			}

			public AggregateParameter UUID
		    {
				get
		        {
					if(_UUID_W == null)
	        	    {
						_UUID_W = TearOff.UUID;
					}
					return _UUID_W;
				}
			}

			public AggregateParameter NoCertificadoSAT
		    {
				get
		        {
					if(_NoCertificadoSAT_W == null)
	        	    {
						_NoCertificadoSAT_W = TearOff.NoCertificadoSAT;
					}
					return _NoCertificadoSAT_W;
				}
			}

			public AggregateParameter Version
		    {
				get
		        {
					if(_Version_W == null)
	        	    {
						_Version_W = TearOff.Version;
					}
					return _Version_W;
				}
			}

			public AggregateParameter SelloSAT
		    {
				get
		        {
					if(_SelloSAT_W == null)
	        	    {
						_SelloSAT_W = TearOff.SelloSAT;
					}
					return _SelloSAT_W;
				}
			}

			public AggregateParameter FormaPago
		    {
				get
		        {
					if(_FormaPago_W == null)
	        	    {
						_FormaPago_W = TearOff.FormaPago;
					}
					return _FormaPago_W;
				}
			}

			public AggregateParameter Sello
		    {
				get
		        {
					if(_Sello_W == null)
	        	    {
						_Sello_W = TearOff.Sello;
					}
					return _Sello_W;
				}
			}

			public AggregateParameter NoCertificadoCSD
		    {
				get
		        {
					if(_NoCertificadoCSD_W == null)
	        	    {
						_NoCertificadoCSD_W = TearOff.NoCertificadoCSD;
					}
					return _NoCertificadoCSD_W;
				}
			}

			public AggregateParameter MetodoPago
		    {
				get
		        {
					if(_MetodoPago_W == null)
	        	    {
						_MetodoPago_W = TearOff.MetodoPago;
					}
					return _MetodoPago_W;
				}
			}

			public AggregateParameter UsoCfdi
		    {
				get
		        {
					if(_UsoCfdi_W == null)
	        	    {
						_UsoCfdi_W = TearOff.UsoCfdi;
					}
					return _UsoCfdi_W;
				}
			}

			public AggregateParameter RfcPAC
		    {
				get
		        {
					if(_RfcPAC_W == null)
	        	    {
						_RfcPAC_W = TearOff.RfcPAC;
					}
					return _RfcPAC_W;
				}
			}

			public AggregateParameter Leyenda
		    {
				get
		        {
					if(_Leyenda_W == null)
	        	    {
						_Leyenda_W = TearOff.Leyenda;
					}
					return _Leyenda_W;
				}
			}

			public AggregateParameter TipoRelacion
		    {
				get
		        {
					if(_TipoRelacion_W == null)
	        	    {
						_TipoRelacion_W = TearOff.TipoRelacion;
					}
					return _TipoRelacion_W;
				}
			}

			public AggregateParameter UUIDrelacionado
		    {
				get
		        {
					if(_UUIDrelacionado_W == null)
	        	    {
						_UUIDrelacionado_W = TearOff.UUIDrelacionado;
					}
					return _UUIDrelacionado_W;
				}
			}

			public AggregateParameter CadenaOriginalSAT
		    {
				get
		        {
					if(_CadenaOriginalSAT_W == null)
	        	    {
						_CadenaOriginalSAT_W = TearOff.CadenaOriginalSAT;
					}
					return _CadenaOriginalSAT_W;
				}
			}

			private AggregateParameter _Soptype_W = null;
			private AggregateParameter _Sopnumbe_W = null;
			private AggregateParameter _Secuencia_W = null;
			private AggregateParameter _Estado_W = null;
			private AggregateParameter _Mensaje_W = null;
			private AggregateParameter _EstadoActual_W = null;
			private AggregateParameter _MensajeEA_W = null;
			private AggregateParameter _SelloCFD_W = null;
			private AggregateParameter _FechaTimbrado_W = null;
			private AggregateParameter _UUID_W = null;
			private AggregateParameter _NoCertificadoSAT_W = null;
			private AggregateParameter _Version_W = null;
			private AggregateParameter _SelloSAT_W = null;
			private AggregateParameter _FormaPago_W = null;
			private AggregateParameter _Sello_W = null;
			private AggregateParameter _NoCertificadoCSD_W = null;
			private AggregateParameter _MetodoPago_W = null;
			private AggregateParameter _UsoCfdi_W = null;
			private AggregateParameter _RfcPAC_W = null;
			private AggregateParameter _Leyenda_W = null;
			private AggregateParameter _TipoRelacion_W = null;
			private AggregateParameter _UUIDrelacionado_W = null;
			private AggregateParameter _CadenaOriginalSAT_W = null;

			public void AggregateClauseReset()
			{
				_Soptype_W = null;
				_Sopnumbe_W = null;
				_Secuencia_W = null;
				_Estado_W = null;
				_Mensaje_W = null;
				_EstadoActual_W = null;
				_MensajeEA_W = null;
				_SelloCFD_W = null;
				_FechaTimbrado_W = null;
				_UUID_W = null;
				_NoCertificadoSAT_W = null;
				_Version_W = null;
				_SelloSAT_W = null;
				_FormaPago_W = null;
				_Sello_W = null;
				_NoCertificadoCSD_W = null;
				_MetodoPago_W = null;
				_UsoCfdi_W = null;
				_RfcPAC_W = null;
				_Leyenda_W = null;
				_TipoRelacion_W = null;
				_UUIDrelacionado_W = null;
				_CadenaOriginalSAT_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
			return null;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
			return null;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
			return null;
		}
	}
}
