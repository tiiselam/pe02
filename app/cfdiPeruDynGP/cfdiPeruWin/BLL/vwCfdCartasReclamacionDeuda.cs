/*
'===============================================================================
'  Generated From - CSharp_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace cfdiPeru
{
	public class vwCfdCartasReclamacionDeuda : SqlClientEntity
	{
		public vwCfdCartasReclamacionDeuda()
		{
			this.QuerySource = "vwCfdCartasReclamacionDeuda";
			this.MappingName = "vwCfdCartasReclamacionDeuda";
		}	
	
		//31/01/11 jcf Crea constructor con cadena de conexión
        public vwCfdCartasReclamacionDeuda(string connstr)
		{
            this.ConnectionString = connstr;
			this.QuerySource = "vwCfdCartasReclamacionDeuda";
			this.MappingName = "vwCfdCartasReclamacionDeuda";
		}	
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			return base.Query.Load();
		}
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
	
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter Letter_type
			{
				get
				{
					return new SqlParameter("@Letter_type", SqlDbType.SmallInt, 0);
				}
			}
			
			public static SqlParameter Ltrrptnm
			{
				get
				{
					return new SqlParameter("@Ltrrptnm", SqlDbType.Char, 31);
				}
			}
			
			public static SqlParameter Ltrdesc
			{
				get
				{
					return new SqlParameter("@Ltrdesc", SqlDbType.Char, 51);
				}
			}
			
			public static SqlParameter CN_Email_Subject
			{
				get
				{
					return new SqlParameter("@CN_Email_Subject", SqlDbType.Char, 81);
				}
			}
			
			public static SqlParameter CN_Letter_Text
			{
				get
				{
					return new SqlParameter("@CN_Letter_Text", SqlDbType.Text, 2147483647);
				}
			}
			
			public static SqlParameter CN_Word_Letter
			{
				get
				{
					return new SqlParameter("@CN_Word_Letter", SqlDbType.TinyInt, 0);
				}
			}
			
			public static SqlParameter CN_Word_Document_File
			{
				get
				{
					return new SqlParameter("@CN_Word_Document_File", SqlDbType.Char, 255);
				}
			}
			
		}
		#endregion	
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string Letter_type = "letter_type";
            public const string Ltrrptnm = "ltrrptnm";
            public const string Ltrdesc = "ltrdesc";
            public const string CN_Email_Subject = "CN_Email_Subject";
            public const string CN_Letter_Text = "CN_Letter_Text";
            public const string CN_Word_Letter = "CN_Word_Letter";
            public const string CN_Word_Document_File = "CN_Word_Document_File";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Letter_type] = vwCfdCartasReclamacionDeuda.PropertyNames.Letter_type;
					ht[Ltrrptnm] = vwCfdCartasReclamacionDeuda.PropertyNames.Ltrrptnm;
					ht[Ltrdesc] = vwCfdCartasReclamacionDeuda.PropertyNames.Ltrdesc;
					ht[CN_Email_Subject] = vwCfdCartasReclamacionDeuda.PropertyNames.CN_Email_Subject;
					ht[CN_Letter_Text] = vwCfdCartasReclamacionDeuda.PropertyNames.CN_Letter_Text;
					ht[CN_Word_Letter] = vwCfdCartasReclamacionDeuda.PropertyNames.CN_Word_Letter;
					ht[CN_Word_Document_File] = vwCfdCartasReclamacionDeuda.PropertyNames.CN_Word_Document_File;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string Letter_type = "Letter_type";
            public const string Ltrrptnm = "Ltrrptnm";
            public const string Ltrdesc = "Ltrdesc";
            public const string CN_Email_Subject = "CN_Email_Subject";
            public const string CN_Letter_Text = "CN_Letter_Text";
            public const string CN_Word_Letter = "CN_Word_Letter";
            public const string CN_Word_Document_File = "CN_Word_Document_File";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[Letter_type] = vwCfdCartasReclamacionDeuda.ColumnNames.Letter_type;
					ht[Ltrrptnm] = vwCfdCartasReclamacionDeuda.ColumnNames.Ltrrptnm;
					ht[Ltrdesc] = vwCfdCartasReclamacionDeuda.ColumnNames.Ltrdesc;
					ht[CN_Email_Subject] = vwCfdCartasReclamacionDeuda.ColumnNames.CN_Email_Subject;
					ht[CN_Letter_Text] = vwCfdCartasReclamacionDeuda.ColumnNames.CN_Letter_Text;
					ht[CN_Word_Letter] = vwCfdCartasReclamacionDeuda.ColumnNames.CN_Word_Letter;
					ht[CN_Word_Document_File] = vwCfdCartasReclamacionDeuda.ColumnNames.CN_Word_Document_File;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string Letter_type = "s_Letter_type";
            public const string Ltrrptnm = "s_Ltrrptnm";
            public const string Ltrdesc = "s_Ltrdesc";
            public const string CN_Email_Subject = "s_CN_Email_Subject";
            public const string CN_Letter_Text = "s_CN_Letter_Text";
            public const string CN_Word_Letter = "s_CN_Word_Letter";
            public const string CN_Word_Document_File = "s_CN_Word_Document_File";

		}
		#endregion	
		
		#region Properties
			public virtual short Letter_type
	    {
			get
	        {
				return base.Getshort(ColumnNames.Letter_type);
			}
			set
	        {
				base.Setshort(ColumnNames.Letter_type, value);
			}
		}

		public virtual string Ltrrptnm
	    {
			get
	        {
				return base.Getstring(ColumnNames.Ltrrptnm);
			}
			set
	        {
				base.Setstring(ColumnNames.Ltrrptnm, value);
			}
		}

		public virtual string Ltrdesc
	    {
			get
	        {
				return base.Getstring(ColumnNames.Ltrdesc);
			}
			set
	        {
				base.Setstring(ColumnNames.Ltrdesc, value);
			}
		}

		public virtual string CN_Email_Subject
	    {
			get
	        {
				return base.Getstring(ColumnNames.CN_Email_Subject);
			}
			set
	        {
				base.Setstring(ColumnNames.CN_Email_Subject, value);
			}
		}

		public virtual string CN_Letter_Text
	    {
			get
	        {
				return base.Getstring(ColumnNames.CN_Letter_Text);
			}
			set
	        {
				base.Setstring(ColumnNames.CN_Letter_Text, value);
			}
		}

		public virtual byte CN_Word_Letter
	    {
			get
	        {
				return base.Getbyte(ColumnNames.CN_Word_Letter);
			}
			set
	        {
				base.Setbyte(ColumnNames.CN_Word_Letter, value);
			}
		}

		public virtual string CN_Word_Document_File
	    {
			get
	        {
				return base.Getstring(ColumnNames.CN_Word_Document_File);
			}
			set
	        {
				base.Setstring(ColumnNames.CN_Word_Document_File, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_Letter_type
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Letter_type) ? string.Empty : base.GetshortAsString(ColumnNames.Letter_type);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Letter_type);
				else
					this.Letter_type = base.SetshortAsString(ColumnNames.Letter_type, value);
			}
		}

		public virtual string s_Ltrrptnm
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Ltrrptnm) ? string.Empty : base.GetstringAsString(ColumnNames.Ltrrptnm);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Ltrrptnm);
				else
					this.Ltrrptnm = base.SetstringAsString(ColumnNames.Ltrrptnm, value);
			}
		}

		public virtual string s_Ltrdesc
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Ltrdesc) ? string.Empty : base.GetstringAsString(ColumnNames.Ltrdesc);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Ltrdesc);
				else
					this.Ltrdesc = base.SetstringAsString(ColumnNames.Ltrdesc, value);
			}
		}

		public virtual string s_CN_Email_Subject
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.CN_Email_Subject) ? string.Empty : base.GetstringAsString(ColumnNames.CN_Email_Subject);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.CN_Email_Subject);
				else
					this.CN_Email_Subject = base.SetstringAsString(ColumnNames.CN_Email_Subject, value);
			}
		}

		public virtual string s_CN_Letter_Text
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.CN_Letter_Text) ? string.Empty : base.GetstringAsString(ColumnNames.CN_Letter_Text);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.CN_Letter_Text);
				else
					this.CN_Letter_Text = base.SetstringAsString(ColumnNames.CN_Letter_Text, value);
			}
		}

		public virtual string s_CN_Word_Letter
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.CN_Word_Letter) ? string.Empty : base.GetbyteAsString(ColumnNames.CN_Word_Letter);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.CN_Word_Letter);
				else
					this.CN_Word_Letter = base.SetbyteAsString(ColumnNames.CN_Word_Letter, value);
			}
		}

		public virtual string s_CN_Word_Document_File
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.CN_Word_Document_File) ? string.Empty : base.GetstringAsString(ColumnNames.CN_Word_Document_File);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.CN_Word_Document_File);
				else
					this.CN_Word_Document_File = base.SetstringAsString(ColumnNames.CN_Word_Document_File, value);
			}
		}


		#endregion			
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter Letter_type
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Letter_type, Parameters.Letter_type);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Ltrrptnm
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Ltrrptnm, Parameters.Ltrrptnm);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Ltrdesc
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Ltrdesc, Parameters.Ltrdesc);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter CN_Email_Subject
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.CN_Email_Subject, Parameters.CN_Email_Subject);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter CN_Letter_Text
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.CN_Letter_Text, Parameters.CN_Letter_Text);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter CN_Word_Letter
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.CN_Word_Letter, Parameters.CN_Word_Letter);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter CN_Word_Document_File
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.CN_Word_Document_File, Parameters.CN_Word_Document_File);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter Letter_type
		    {
				get
		        {
					if(_Letter_type_W == null)
	        	    {
						_Letter_type_W = TearOff.Letter_type;
					}
					return _Letter_type_W;
				}
			}

			public WhereParameter Ltrrptnm
		    {
				get
		        {
					if(_Ltrrptnm_W == null)
	        	    {
						_Ltrrptnm_W = TearOff.Ltrrptnm;
					}
					return _Ltrrptnm_W;
				}
			}

			public WhereParameter Ltrdesc
		    {
				get
		        {
					if(_Ltrdesc_W == null)
	        	    {
						_Ltrdesc_W = TearOff.Ltrdesc;
					}
					return _Ltrdesc_W;
				}
			}

			public WhereParameter CN_Email_Subject
		    {
				get
		        {
					if(_CN_Email_Subject_W == null)
	        	    {
						_CN_Email_Subject_W = TearOff.CN_Email_Subject;
					}
					return _CN_Email_Subject_W;
				}
			}

			public WhereParameter CN_Letter_Text
		    {
				get
		        {
					if(_CN_Letter_Text_W == null)
	        	    {
						_CN_Letter_Text_W = TearOff.CN_Letter_Text;
					}
					return _CN_Letter_Text_W;
				}
			}

			public WhereParameter CN_Word_Letter
		    {
				get
		        {
					if(_CN_Word_Letter_W == null)
	        	    {
						_CN_Word_Letter_W = TearOff.CN_Word_Letter;
					}
					return _CN_Word_Letter_W;
				}
			}

			public WhereParameter CN_Word_Document_File
		    {
				get
		        {
					if(_CN_Word_Document_File_W == null)
	        	    {
						_CN_Word_Document_File_W = TearOff.CN_Word_Document_File;
					}
					return _CN_Word_Document_File_W;
				}
			}

			private WhereParameter _Letter_type_W = null;
			private WhereParameter _Ltrrptnm_W = null;
			private WhereParameter _Ltrdesc_W = null;
			private WhereParameter _CN_Email_Subject_W = null;
			private WhereParameter _CN_Letter_Text_W = null;
			private WhereParameter _CN_Word_Letter_W = null;
			private WhereParameter _CN_Word_Document_File_W = null;

			public void WhereClauseReset()
			{
				_Letter_type_W = null;
				_Ltrrptnm_W = null;
				_Ltrdesc_W = null;
				_CN_Email_Subject_W = null;
				_CN_Letter_Text_W = null;
				_CN_Word_Letter_W = null;
				_CN_Word_Document_File_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter Letter_type
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Letter_type, Parameters.Letter_type);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Ltrrptnm
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Ltrrptnm, Parameters.Ltrrptnm);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Ltrdesc
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Ltrdesc, Parameters.Ltrdesc);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter CN_Email_Subject
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.CN_Email_Subject, Parameters.CN_Email_Subject);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter CN_Letter_Text
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.CN_Letter_Text, Parameters.CN_Letter_Text);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter CN_Word_Letter
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.CN_Word_Letter, Parameters.CN_Word_Letter);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter CN_Word_Document_File
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.CN_Word_Document_File, Parameters.CN_Word_Document_File);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter Letter_type
		    {
				get
		        {
					if(_Letter_type_W == null)
	        	    {
						_Letter_type_W = TearOff.Letter_type;
					}
					return _Letter_type_W;
				}
			}

			public AggregateParameter Ltrrptnm
		    {
				get
		        {
					if(_Ltrrptnm_W == null)
	        	    {
						_Ltrrptnm_W = TearOff.Ltrrptnm;
					}
					return _Ltrrptnm_W;
				}
			}

			public AggregateParameter Ltrdesc
		    {
				get
		        {
					if(_Ltrdesc_W == null)
	        	    {
						_Ltrdesc_W = TearOff.Ltrdesc;
					}
					return _Ltrdesc_W;
				}
			}

			public AggregateParameter CN_Email_Subject
		    {
				get
		        {
					if(_CN_Email_Subject_W == null)
	        	    {
						_CN_Email_Subject_W = TearOff.CN_Email_Subject;
					}
					return _CN_Email_Subject_W;
				}
			}

			public AggregateParameter CN_Letter_Text
		    {
				get
		        {
					if(_CN_Letter_Text_W == null)
	        	    {
						_CN_Letter_Text_W = TearOff.CN_Letter_Text;
					}
					return _CN_Letter_Text_W;
				}
			}

			public AggregateParameter CN_Word_Letter
		    {
				get
		        {
					if(_CN_Word_Letter_W == null)
	        	    {
						_CN_Word_Letter_W = TearOff.CN_Word_Letter;
					}
					return _CN_Word_Letter_W;
				}
			}

			public AggregateParameter CN_Word_Document_File
		    {
				get
		        {
					if(_CN_Word_Document_File_W == null)
	        	    {
						_CN_Word_Document_File_W = TearOff.CN_Word_Document_File;
					}
					return _CN_Word_Document_File_W;
				}
			}

			private AggregateParameter _Letter_type_W = null;
			private AggregateParameter _Ltrrptnm_W = null;
			private AggregateParameter _Ltrdesc_W = null;
			private AggregateParameter _CN_Email_Subject_W = null;
			private AggregateParameter _CN_Letter_Text_W = null;
			private AggregateParameter _CN_Word_Letter_W = null;
			private AggregateParameter _CN_Word_Document_File_W = null;

			public void AggregateClauseReset()
			{
				_Letter_type_W = null;
				_Ltrrptnm_W = null;
				_Ltrdesc_W = null;
				_CN_Email_Subject_W = null;
				_CN_Letter_Text_W = null;
				_CN_Word_Letter_W = null;
				_CN_Word_Document_File_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
			return null;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
			return null;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
			return null;
		}
	}
}
